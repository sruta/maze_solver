import { RequestHandler } from "express";
import { IUniqueElement } from "../persistence/db.interfaces";

type MazeLayout = string[][];

interface IMaze extends IUniqueElement {
  layout: MazeLayout;
}

const GATE = "B";

type MazeCell = [number, number];

type MazeSolver = (maze: IMaze) => MazeLayout | Error;

interface IMazeRepository {
  insert: (element: IMaze) => string;
  fetch: (id: string) => IMaze | Error;
  update: (element: IMaze) => IMaze;
  delete: (id: string) => boolean | Error;
}

interface IMazeService {
  create: (layout: MazeLayout) => IMaze | Error;
  autogenerate: () => IMaze;
  findById: (id: string) => IMaze | Error;
  solve: (id: string) => MazeLayout | Error;
}

interface IMazeController {
  create: RequestHandler;
  createAutogenerated: RequestHandler;
  get: RequestHandler;
  solve: RequestHandler;
}

export {
  IMazeController,
  IMazeService,
  IMazeRepository,
  IMaze,
  MazeLayout,
  MazeCell,
  MazeSolver,
  GATE,
};
